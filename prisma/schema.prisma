generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ────────────── PRODUCT ──────────────
model Product {
  id             Int          @id @default(autoincrement())
  name           String
  price          Float
  unit           String
  saleItems      SaleItem[]

  description     String?
  stock           Float?
  imageUrl        String?
  imageTag        String?
  packingSize     String?
  expirationDate  DateTime?
  replenishAt     DateTime?
  dealerPrice     Float?
  srp             Float?
  uses           String[]

  
  categoryId  Int?
  category    Category?    @relation(fields: [categoryId], references: [id])

  brandId     Int?
  brand       Brand?       @relation(fields: [brandId], references: [id])

  productTags ProductTag[]
  tags        Tag[]        @relation("ProductTags")

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt @default(now())
}

// ────────────── SALE ──────────────
model Sale {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  total     Float
  items     SaleItem[]
}

model SaleItem {
  id        Int     @id @default(autoincrement())
  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}

// ────────────── CATEGORY ──────────────
model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  brands    Brand[]   // ✅ A category can have many brands
}

// ────────────── TAG ──────────────
model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  productTags ProductTag[]
  products    Product[]    @relation("ProductTags")
}

model ProductTag {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int

  @@id([productId, tagId])
}

// ────────────── BRAND ──────────────
model Brand {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  categoryId Int?      // ✅ Optional to support generic or uncategorized brands
  category   Category? @relation(fields: [categoryId], references: [id])
  products   Product[]
}
